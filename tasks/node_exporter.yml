- name: Create node_exporter group
    group:
      name: "{{ node_exporter.user.group.name }}"
      gid: "{{ node_exporter.user.group.gid }}"

  - name: Create node_exporter user
    user:
      name: "{{ node_exporter.user.name }}"
      shell: /bin/false
      group: "{{ node_exporter.user.group.name }}"
      uid: "{{ node_exporter.user.uid }}"

  - name: "Download node_exporter {{ node_exporter.version }}"
    get_url:
      url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter.version }}/node_exporter-{{ node_exporter.version }}.linux-amd64.tar.gz"
      dest: "{{ node_exporter.install_dir }}"
      use_proxy: yes
      checksum: "sha256:{{ node_exporter.sha256sum }}"
    register: node_exporter_download_result

  - name: "Unarchive node_exporter {{ node_exporter.version }} package"
    unarchive:
      src: "{{ node_exporter_download_result.dest }}"
      dest: "{{ node_exporter.install_dir }}"
      mode: 0644
      owner: root
      group: root

  - name: "Remove package {{ node_exporter_download_result.dest }}"
    file:
      path: "{{ node_exporter_download_result.dest }}"
      state: absent

  - name: "Move node_exporter files to installation directory {{ node_exporter.install_dir }}/node_exporter"
    copy:
      src: "{{ node_exporter.install_dir }}/node_exporter-{{ node_exporter.version }}.linux-amd64/"
      dest: "{{ node_exporter.install_dir}}/node_exporter"
      remote_src: yes
      mode: 0755
      owner: "{{ node_exporter.user.name }}"
      group: "{{ node_exporter.user.group.name }}"

  - name: Remove old node_exporter files
    file:
      path: "{{ node_exporter.install_dir }}/node_exporter-{{ node_exporter.version }}.linux-amd64"
      state: absent

  - name: "Set permissions on {{ node_exporter.install_dir }}/node_exporter/node_exporter"
    file:
      path: "{{ node_exporter.install_dir }}/node_exporter/node_exporter"
      state: file
      mode: 0744
      owner: "{{ node_exporter.user.name }}"
      group: "{{ node_exporter.user.group.name }}"

  - name: Create systemd service file
    template:
      src: ../templates/node_exporter.service
      dest: /etc/systemd/system/node_exporter.service
      owner: "{{ node_exporter.user.name }}"
      group: "{{ node_exporter.user.group.name }}"
      mode: 0744

  - name: reload systemd
    command:
      cmd: systemctl daemon-reload

  - name: Enable node_exporter.service
    systemd:
      name: node_exporter.service
      enabled: true

  - name: Start node_exporter.service
    systemd:
      name: node_exporter.service
      state: started
